{"version":3,"sources":["assets/images/1.jpg","scripts/react-redux/reducers/data.js","scripts/react-redux/reducers/mobile.js","scripts/react-redux/reducers/home.js","scripts/react-redux/reducers/mine.js","scripts/react-redux/reducers/user.js","scripts/react-redux/reducers/search.js","scripts/react-redux/reducers/classify.js","scripts/react-redux/reducers/index.js","scripts/react-redux/store.js","assets/images/g1.jpg","assets/images/g2.jpg","assets/images/g3.jpg","assets/images/g4.jpg","assets/images/h1.webp","assets/images/h2.webp","assets/images/h3.webp","assets/images/h4.webp","scripts/views/index.js","scripts/index.js","App.js","serviceWorker.js","index.js","utils/lazyload.js"],"names":["module","exports","defaultState","immutable","fromJS","data","g1","g2","g3","g4","mobile","code","flag","hot","banner","img","h1","h2","h3","h4","item","initpic","pic","token","sessionStorage","searchList","hots","goodList","goodType","reducers","combineReducers","state","action","type","console","log","payload","get","home","set","mine","user","obj","toJS","search","classify","reverse","store","createStore","applyMiddleware","thunk","promise","getState","MainLayout","history","this","props","location","className","path","exact","render","to","component","LazyLoad","Component","childContextTypes","PropTypes","object","MainRouter","basename","App","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","loadingToast","Toast","loading","ToastExample","setTimeout","hide","onClick","React","loader","Loadable"],"mappings":"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","file":"static/js/main.7456dff4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1.f97fb9e0.jpg\";","import immutable from \"immutable\"\r\nimport g1 from \"@/assets/images/g1.jpg\"\r\nimport g2 from \"@/assets/images/g2.jpg\"\r\nimport g3 from \"@/assets/images/g3.jpg\"\r\nimport g4 from \"@/assets/images/g4.jpg\"\r\nconst defaultState = immutable.fromJS({\r\n    data: [g1, g2, g3, g4]\r\n})\r\n\r\nexport const data = (state = defaultState, action) => {\r\n    // console.log(action)\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","\r\nimport immutable from \"immutable\"\r\n\r\nconst defaultState = immutable.fromJS({\r\n    mobile: \"\",\r\n    code: \"\",\r\n    flag: true\r\n})\r\n\r\nexport const mobile = (state = defaultState, action) => {\r\n    console.log(action)\r\n    switch (action.type) {\r\n        case 'changeMobile':\r\n\r\n            return { mobile: action.payload }\r\n            break;\r\n\r\n        case 'changeCode':\r\n            return { code: action.payload }\r\n            break;\r\n        case 'changeflag':\r\n\r\n            return { flag: state.get(\"flag\") }\r\n            break;\r\n        case 'clearmobile':\r\n            return { mobile: action.payload }\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import immutable from \"immutable\"\r\nimport h1 from \"@/assets/images/h1.webp\"\r\nimport h2 from \"@/assets/images/h2.webp\"\r\nimport h3 from \"@/assets/images/h3.webp\"\r\nimport h4 from \"@/assets/images/h4.webp\"\r\nconst defaultState = immutable.fromJS({\r\n    hot:[],\r\n    banner: [],\r\n    img: [h1, h2, h3, h4],\r\n    item: [],\r\n})\r\n\r\nexport const home = (state = defaultState, action) => {\r\n    console.log(action)\r\n    switch (action.type) {\r\n        case \"getBanner\":\r\n            return state.set(\"banner\", action.payload)\r\n            break;\r\n        case \"getItem\":\r\n            return state.set(\"item\", action.payload)\r\n            break;\r\n        case \"getHot\":\r\n            return state.set(\"hot\", action.payload)\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import immutable from \"immutable\"\r\nimport initpic from \"@/assets/images/1.jpg\"\r\nconst defaultState = immutable.fromJS({\r\n    img: initpic\r\n\r\n})\r\n\r\nexport const mine = (state = defaultState, action) => {\r\n    console.log(action)\r\n    switch (action.type) {\r\n        case \"getPic\":\r\n            return state\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","\r\nimport immutable from \"immutable\"\r\n\r\nconst defaultState = immutable.fromJS({\r\n    pic:null,\r\n    mobile:'',\r\n    token:sessionStorage.token\r\n})\r\n\r\nexport const user = (state=defaultState,action)=>{\r\n    switch(action.type){\r\n\r\n        case \"changeUser\":\r\n        var obj = {...state.toJS(),...action.payload};\r\n        return immutable.fromJS(obj);\r\n        break;\r\n\r\n\r\n\r\n        default:\r\n        return state;\r\n        break;\r\n    }\r\n}","\r\nimport immutable from \"immutable\"\r\n\r\nconst defaultState = immutable.fromJS({\r\n    searchList: \"\",\r\n\r\n})\r\n\r\nexport const search = (state = defaultState, action) => {\r\n    console.log(action)\r\n    switch (action.type) {\r\n        case 'getSearchList':\r\n\r\n            return { searchList: action.payload }\r\n            break;\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import immutable from \"immutable\"\r\nconst defaultState = immutable.fromJS({\r\n    hots: [],\r\n    goodList: [],\r\n    goodType: [],\r\n    searchList: []\r\n})\r\n\r\nexport const classify = (state = defaultState, action) => {\r\n    console.log(action)\r\n    switch (action.type) {\r\n        case \"getHots\":\r\n            return state.set(\"hots\", action.payload)\r\n\r\n            break;\r\n        case \"getGoodList\":\r\n\r\n            return state.set(\"goodList\", action.payload);\r\n            break;\r\n\r\n        case \"changeGoodListReverse\":\r\n            return state.set(\"goodList\", state.toJS().goodList.reverse());\r\n            break;\r\n\r\n        case \"getSearchList\":\r\n            return state.set(\"searchList\", action.payload);\r\n            break;\r\n\r\n        case \"changeSearchListReverse\":\r\n            return state.set(\"searchList\", state.toJS().searchList.reverse());\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from \"redux-immutable\"\r\nimport { data } from \"./data\"\r\nimport { mobile } from \"./mobile\"\r\nimport { home } from \"./home\"\r\nimport { mine } from \"./mine\"\r\nimport { user } from \"./user\"\r\nimport { search } from \"./search\"\r\nimport { classify } from \"./classify\"\r\nexport const reducers = combineReducers({\r\n    data: data,\r\n    mobile: mobile,\r\n    home: home,\r\n    mine: mine,\r\n    user: user,\r\n    search: search,\r\n    classify: classify\r\n})","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\"\r\nimport promise from \"redux-promise\"\r\nimport { reducers } from \"./reducers\"\r\n\r\n\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk, promise));\r\n\r\n\r\nconst state = store.getState();\r\nconsole.log(state)\r\n\r\n\r\nexport default store","module.exports = __webpack_public_path__ + \"static/media/g1.3ab3be61.jpg\";","module.exports = __webpack_public_path__ + \"static/media/g2.cfe43c00.jpg\";","module.exports = __webpack_public_path__ + \"static/media/g3.66e05c46.jpg\";","module.exports = __webpack_public_path__ + \"static/media/g4.69e62c73.jpg\";","module.exports = __webpack_public_path__ + \"static/media/h1.1d368d5c.webp\";","module.exports = __webpack_public_path__ + \"static/media/h2.b456adba.webp\";","module.exports = __webpack_public_path__ + \"static/media/h3.67f86251.webp\";","module.exports = __webpack_public_path__ + \"static/media/h4.e57b0066.webp\";","import React, { Component } from \"react\"\r\n\r\nimport { Route, Redirect, Switch } from \"react-router-dom\"\r\nimport LazyLoad from \"&/lazyload\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nexport default class MainLayout extends Component {\r\n    getChildContext() {\r\n        return {\r\n            history: this.props.history,\r\n            location: this.props.location\r\n\r\n\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Switch>\r\n                    <Route path=\"/\" exact render={() => (<Redirect to=\"/guide\" />)} />\r\n                    <Route path=\"/guide\" component={LazyLoad(() => import(\"./guide\"))} />\r\n                    <Route path=\"/main\" component={LazyLoad(() => import(\"./main\"))} />\r\n                    <Route path=\"/login\" component={LazyLoad(() => import(\"./login\"))} />\r\n                    <Route path=\"/search\" component={LazyLoad(() => import(\"./search\"))} />\r\n                    <Route path=\"/scan\" component={LazyLoad(() => import(\"./scan\"))} />\r\n                    <Route path=\"/detail/:goodsId\" component={LazyLoad(() => import(\"./detail\"))} />\r\n                    <Route path=\"/mylove\" component={LazyLoad(() => import(\"./mylove\"))} />\r\n\r\n                    <Route render={() => (<Redirect to=\"/guide\" />)} />\r\n                </Switch>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nMainLayout.childContextTypes = {\r\n    history: PropTypes.object,\r\n    location: PropTypes.object,\r\n\r\n}\r\n","\r\n/* eslint-disable */\r\nimport React, { Component } from \"react\";\r\nimport { Provider } from \"react-redux\"\r\nimport store from \"./react-redux/store\"\r\nimport {\r\n    HashRouter as Hash,\r\n    Route,\r\n} from \"react-router-dom\";\r\n\r\nimport MainLayout from \"./views\"\r\n\r\nexport class MainRouter extends Component {\r\n    render() {\r\n        return (\r\n            <Provider store={store}>\r\n                <Hash\r\n                    basename=\"\"\r\n                >\r\n                    <Route component={MainLayout} ></Route>\r\n                </Hash>\r\n\r\n            </Provider>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\n// import logo from './logo.svg';\n// import './App.css';\nimport \"@/styles/index.scss\"  //主样式\nimport { MainRouter } from '~';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainRouter />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"@/styles/index.scss\"  //主样式\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// import React from \"react\"\r\n// import Loadable from \"react-loadable\"\r\n\r\n// const style = {\r\n//     load: { color: \"#999\", textAlgin: \"center\" }\r\n// }\r\n// // load组件\r\n// const loadingCpt = () => {\r\n//     return (\r\n//         <div>\r\n//             <h2 className={style.load}>loading</h2>\r\n//         </div>\r\n//     )\r\n// }\r\n// export default (loader, loading = loadingCpt) => {\r\n//     return Loadable({\r\n//         loader,\r\n//         loading\r\n//     })\r\n// }\r\n\r\n\r\n\r\n//路由懒加载\r\nimport React from \"react\";\r\nimport Loadable from \"react-loadable\"\r\nimport { Toast, Button } from \"antd-mobile\"\r\n\r\n\r\nfunction loadingToast() {\r\n    Toast.loading('Loading...', 1, () => {\r\n        console.log('Load complete !!!');\r\n    });\r\n}\r\n\r\nclass ToastExample extends React.Component {\r\n    componentDidMount() {\r\n        Toast.loading('Loading...', 30, () => {\r\n            console.log('Load complete !!!');\r\n        });\r\n        setTimeout(() => {\r\n            Toast.hide();\r\n        }, 500);\r\n    }\r\n    render() {\r\n        return (\r\n            <Button onClick={loadingToast}>loading</Button>\r\n        );\r\n    }\r\n}\r\n//loading组件通用的 如果传入loading,有动画\r\nexport default (loader, loading = ToastExample) => {\r\n    return Loadable({\r\n        loader,     //需要懒加载的组件\r\n        loading\r\n    })\r\n}"],"sourceRoot":""}